DOCKER: Vai ajudar a controlar os serviços da aplicação (banco de dados, qualquer serviço externo)

Docker ps pra ver o que tá rodando
Docker run database, pra rodar o database novamente

SEQUELIZE: Faz a tradução do código JavaScript pro Código SQL

ORM : Forma de abtração do Banco de Dados
O MVC (model view controller), as tabelas viram models

Migrations: Controle de versão pra base de dados, mantém atualizada entre todos os desenvolvedores
Uma migration para cada tabela

Seed: Popula a base de dados para desenvolvimento
    - Utilizado para popular dados para testes
    - Executável apenas por código

Arquitetura MVC
- As regras de negócio ficam no Controller (tipo enviar email para um cliente novo cadastrado)
- A View aqui node NodeJS será apenas o JSON retornado para o Front-end

Prettier e Eslint pra ajudar na escrita do código

sudo docker ps - pra ver o que tá rodando
"sudo docker ps -a" : para visualizar todos os containers mesmo os que não estão rodando
Postbird

sudo docker start database : para rodar o container (lembra de dar este comando antes de dar o yarn sequelize db:migrate)

Usar o postbird para visualizar a tabela criada

"yarn sequelize db:migrate:undo desfaz a última migration ou ...undo:all que desfaz todas as migrations"


---------------------------------------------

para criar o database postgres:
sudo docker run --name database -e POSTGRES_PASSWORD=docker -p 5432:5432 -d postgres

Para criar o database do gobarber por exemplo, cria direto no postbird

// Criando o banco para as atividades em segundo plano
// Lembrar disso aqui caso dê erro, tem que criar e rodar
docker run --name redisbarber -p 6379:6379 -d -t redis:alpine

-------------------------------------

Modulo 03

Se der algum problema em alguma requisição, pode ser que precise atualizar o token para alguem que seja
provider == true. Então é necessário logar com aquela conta para pegar o token

Mult part form data

Aux: `` `

yarn sequelize migration:create --name=create-files // Cria a tabela de arquivos

* Criar uma nova migration pode ser uma boa estratégia, no caso, para botar o avatar dos usuários

yarn sequelize migration:create --name=create-appointments (para fazer a migration dessa tabela com o nome appointments)


Mongodb para o banco não relacional

docker run --name mongobarber -p 27017:27017 -d -t mongo (imagem rodando o mongodb)

// Para testar se tá rodando basta ir em localhost:27017 e ver a msg "it looks like you are trying..."

yarn add mongoose

Baixar o mongodb compass e quanto cadastrar um novo agendamento ele já coloca lá

O SQL é para o estruturamento dos dados que tem muitas relações
O MongoDb é para performance, quanto não precisa de muitas relações

Nodemailer - Lib para enviar emails

Handlebars - Template engine para emails

A pasta "Partials", dentro de "Views/Emails" são arquivos que eu posso importar dentro de alguns emails

Background jobs - Serviços que ficam rodando em segundo plano
bee-queue: Para trabalhos em segundo plano no nodejs
kue (igual ao bee-queue mas com algumas funcionalidades a mais e mais lento)

yarn queue para deixar a fila (jobs) rodando
